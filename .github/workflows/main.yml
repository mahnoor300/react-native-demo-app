name: React Native CI/CD

on:
  workflow_dispatch:

jobs:
  setup-environment:
    name: Set up Node.js, Yarn, and Android Studio
    runs-on: ubuntu-latest  # Use Ubuntu to set up environment

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js (version 18)
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Ensure Node.js 18 or higher

      - name: Install Yarn (Version 3.6.4)
        run: |
          corepack enable
          corepack prepare yarn@3.6.4 --activate  # Ensure Yarn 3.6.4 is used

      - name: Cache Yarn dependencies
        uses: actions/cache@v2
        with:
          path: ~/.yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies with Yarn
        run: yarn install --no-frozen-lockfile  # Prevents modifications to yarn.lock

      - name: Set up Android SDK
        run: |
          sudo apt update
          sudo apt install -y openjdk-11-jdk
          sudo apt install -y wget unzip

          # Download Android SDK Command Line Tools
          mkdir -p $HOME/android-sdk/cmdline-tools
          cd $HOME/android-sdk/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
          unzip commandlinetools-linux-8512546_latest.zip
          rm commandlinetools-linux-8512546_latest.zip

          # Install Android SDK platform-tools, platforms, and build-tools
          yes | $HOME/android-sdk/cmdline-tools/bin/sdkmanager --licenses
          yes | $HOME/android-sdk/cmdline-tools/bin/sdkmanager "platform-tools" "platforms;android-30" "build-tools;30.0.3"

          # Add Android SDK to PATH
          echo "export ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "export PATH=$ANDROID_HOME/cmdline-tools/bin:$ANDROID_HOME/platform-tools:$PATH" >> $GITHUB_ENV

      - name: Link Native Modules (if necessary)
        run: npx react-native link  # Link native modules (if necessary)

  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest  # Use Ubuntu to build Android

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js (version 18)
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Yarn (Version 3.6.4)
        run: |
          corepack enable
          corepack prepare yarn@3.6.4 --activate  # Ensure Yarn 3.6.4 is used

      - name: Install dependencies with Yarn
        run: yarn install --no-frozen-lockfile  # Prevents modifications to yarn.lock

      - name: Set up Android SDK
        run: |
          sudo apt update
          sudo apt install -y openjdk-11-jdk
          sudo apt install -y wget unzip

          # Download Android SDK Command Line Tools
          mkdir -p $HOME/android-sdk/cmdline-tools
          cd $HOME/android-sdk/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
          unzip commandlinetools-linux-8512546_latest.zip
          rm commandlinetools-linux-8512546_latest.zip

          # Install Android SDK platform-tools, platforms, and build-tools
          yes | $HOME/android-sdk/cmdline-tools/bin/sdkmanager --licenses
          yes | $HOME/android-sdk/cmdline-tools/bin/sdkmanager "platform-tools" "platforms;android-30" "build-tools;30.0.3"

          # Add Android SDK to PATH
          echo "export ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "export PATH=$ANDROID_HOME/cmdline-tools/bin:$ANDROID_HOME/platform-tools:$PATH" >> $GITHUB_ENV

      - name: Link Native Modules (if necessary)
        run: npx react-native link

      - name: Build APK
        run: |
          cd android && ./gradlew clean
          cd android && ./gradlew assembleRelease  # Build the APK

      - name: Upload APK to GitHub artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-release-apk
          path: android/app/build/outputs/apk/release/app-release.apk
