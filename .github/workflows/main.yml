name: React Native CI/CD

on:
  workflow_dispatch:

jobs:
  setup-environment:
    name: Set up Node.js, Yarn, and Android Studio
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check root directory structure
        run: |
          echo "Root directory structure"
          ls -l  # List files and directories in the root folder

      - name: Set up Node.js (version 18)
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Yarn (Version 3.6.4)
        run: |
          corepack enable
          corepack prepare yarn@3.6.4 --activate

      - name: Cache Yarn dependencies
        uses: actions/cache@v2
        with:
          path: ~/.yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies with Yarn
        run: yarn install --no-frozen-lockfile

      - name: Set up Android SDK
        run: |
          sudo apt update
          sudo apt install -y openjdk-11-jdk
          sudo apt install -y wget unzip

          mkdir -p $HOME/android-sdk/cmdline-tools
          cd $HOME/android-sdk/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
          unzip commandlinetools-linux-8512546_latest.zip
          rm commandlinetools-linux-8512546_latest.zip
          mv cmdline-tools latest

          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses
          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-30" "build-tools;30.0.3"

          echo "export ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH" >> $GITHUB_ENV

  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check root directory structure
        run: |
          echo "Root directory structure"
          ls -l  # List files and directories in the root folder

      - name: Set up Node.js (version 18)
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Yarn (Version 3.6.4)
        run: |
          corepack enable
          corepack prepare yarn@3.6.4 --activate

      - name: Install dependencies with Yarn
        run: yarn install --no-frozen-lockfile

      - name: Set up Android SDK
        run: |
          sudo apt update
          sudo apt install -y openjdk-11-jdk
          sudo apt install -y wget unzip

          mkdir -p $HOME/android-sdk/cmdline-tools
          cd $HOME/android-sdk/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
          unzip commandlinetools-linux-8512546_latest.zip
          rm commandlinetools-linux-8512546_latest.zip
          mv cmdline-tools latest

          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses
          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-30" "build-tools;30.0.3"

          echo "export ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH" >> $GITHUB_ENV

      - name: Grant execute permissions to gradlew
        run: chmod +x ./android/gradlew
        working-directory: ./  # Ensure this runs from the root of the repo

      - name: Verify gradlew permissions
        run: |
          ls -l ./android/gradlew  # Ensure the gradlew file is executable
        working-directory: ./  # Ensure this runs from the root of the repo

      - name: Run Gradle build
        run: |
          cd ./android  # Change directory to the android folder
          ./gradlew clean --stacktrace
          ./gradlew assembleRelease --stacktrace
        working-directory: ./  # Ensure this runs from the root of the repo

      - name: Upload APK to GitHub artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-release-apk
          path: android/app/build/outputs/apk/release/app-release.apk
